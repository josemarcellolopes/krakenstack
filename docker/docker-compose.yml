services:
  airflow-postgres:
    image: postgres:15
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    networks:
      - kraken
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-redis:
    image: redis:7
    container_name: airflow_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - kraken
    volumes:
      - redis_data:/data

  airflow-webserver:
    image: apache/airflow:2.9.2
    container_name: airflow_webserver
    restart: always
    depends_on:
      - airflow-postgres
      - airflow-redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow_postgres/airflow
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    entrypoint: 
      - /bin/bash
      - -c
      - |
        airflow db migrate &&
        airflow users create --username admin \
                            --firstname Admin \
                            --lastname User \
                            --role Admin \
                            --email admin@example.com \
                            --password Suc3ss0! &&
        exec airflow webserver
    networks:
      - kraken

  airflow-scheduler:
    image: apache/airflow:2.9.2
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow_postgres/airflow
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - kraken

  airflow-worker:
    image: apache/airflow:2.9.2
    container_name: airflow_worker
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow_postgres/airflow
    command: celery worker
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - kraken

  airflow-init:
    image: apache/airflow:2.9.2
    container_name: airflow_init
    depends_on:
      - airflow-postgres
      - airflow-redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow_postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow_postgres/airflow
    command: db init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    networks:
      - kraken

  mysql-rdbms:
    image: mysql:latest
    container_name: mysql_rdbms
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Suc3ss0!
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - kraken

  briefer-cloud:
    image: briefercloud/briefer
    container_name: briefer_cloud
    ports:
      - "3000:3000"
    volumes:
      - briefer_data:/var/lib/postgresql/data
      - briefer_jupyter:/home/jupyteruser
      - briefer_home:/home/briefer
    networks:
      - kraken

  storage-minio:
    image: minio/minio:latest
    container_name: storage_minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: Suc3ss0!
    volumes:
      - minio_data:/data
    networks:
      - kraken
    command: server --console-address ":9090" /data

  spark-master:
    image: bitnami/spark:latest
    container_name: spark_master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "7077:7077"
      - "8081:8080"
    networks:
      - kraken

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark_worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - kraken

  spark-jupyter:
    image: jupyter/pyspark-notebook
    container_name: jupyter_notebook
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    depends_on:
      - spark-master
      - spark-worker
    networks:
      - kraken

  flow-n8n:
    image: n8nio/n8n
    container_name: flow_n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=yourpassword
      - N8N_HOST=n8n.local
      - N8N_PORT=5678
      - WEBHOOK_TUNNEL_URL=https://yourdomain.com
      - GENERIC_TIMEZONE=America/Sao_Paulo
    ports:
      - "5678:5678"
    volumes:
      - flow_n8n_data:/home/node/.n8n
    depends_on:
      - flow-postgres
    networks:
      - kraken

  flow-postgres:
    image: postgres:14
    container_name: flow_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8npassword
      - POSTGRES_DB=n8n
    volumes:
      - flow_postgres_data:/var/lib/postgresql/data
    networks:
      - kraken

networks:
  kraken:
    driver: bridge

volumes:
  airflow_dags:
  airflow_logs:
  airflow_plugins:
  postgres_data:
  redis_data:
  mysql_data:
  briefer_data:
  briefer_jupyter:
  briefer_home:
  minio_data:
  flow_n8n_data:
  flow_postgres_data: